1.vertical-align,父层为 td 或者 th ,设置父元素display:table, 子元素
 display:table-cell;vertical-align:middle;
3 .parent {
      display: box;
      box-orient: vertical;
      box-pack: center;
}
水平居中较为简单, 共提供了8种方法, 一般情况下 text-align:center,marin:0 auto; 足矣
① text-align:center;
② margin:0 auto;
③ width:fit-content;
④ flex
⑤ 盒模型
⑥ transform
⑦ ⑧ 两种不同的绝对定位方法

垂直居中, 共提供了8种方法.
① 单行文本, line-height
② 行内块级元素, 使用 display: inline-block, vertical-align: middle; 加上伪元素辅助实现
③ vertical-align
④ flex
⑥ transform
⑦ ⑧ 两种不同的绝对定位方法
我们发现, flex, 盒模型, transform, 绝对定位, 这几种方法同时适用于水平居中和垂直居中.

布局方式：
1.固定布局：宽度，高度固定，页面被一个固定网页包裹，容器不能移动
2.流式布局：以百分比为主要形式，让屏幕自适应，这种布局方式定义灵活
3.弹性布局（flex布局）：pc端并不推荐使用，ie9以下浏览器均不支持，移动端比较常用
4.浮动布局（float）：可以设置left或者right，他使元素脱离文档流进而达到布局的目的（使用浮动的结束以后，别忘记清除浮动哦）
5.定位布局：
    position: fixed;固定布局，将元素固定在一个位置，不随页面移动而移动；
    position: relative;相对定位，相对于元素自身定位，不脱离文档流，相当于定义一个参照物，一般和绝对定位结合使用；
    position: absolute;绝对定位，脱离文档流，一般和相对定位结合使用，如果不定义相对定义，将会相对于整个浏览器定位

3.animate和translate有没有用过，一些常见的属性说下？
Animation：
    name、duration、 
    timing-function（速度曲线：
        linear（速度相同）  ease（先低速后加速） 
        ease-in （低速开始） ease-out （低速结束） ease-in-out  （低速开始和结束） cubic-bezier(n,n,n,n)（从 0 到 1 的数值）））
    delay、 iteration-count（播放次数）、direction（播放方式）
transform：translate（位移） 、scale（缩放）、rotate（旋转）、skew（倾斜转换,s ke l）、perspective（per s ba ke tive,透视视图）

闭包的理解，以及你在什么场景下会用到闭包？: 闭包存在的意义就是让我们可以间接访问函数内部的变量。

什么是浅拷贝？
如何实现浅拷贝？(展开运算符 ... 来实现浅拷贝)
什么是深拷贝？如何实现深拷贝？
会忽略 undefined
会忽略 symbol
不能序列化函数
不能解决循环引用的对象

什么是原型：原型也是一个对象，并且这个对象中包含了很多函数。每个 JS 对象都有 __proto__ 属性，这个属性指向了原型
什么是原型链吧。
    对象的 __proto__ 属性指向原型， __proto__ 将对象和原型连接起来组成了原型链

原型继承和 Class 继承：

跨越：
    CORS：
        Access-Control-Allow-Origin
        Access-Control-Allow-Credentials
        Access-Control-Request-Method
        Access-Control-Allow-Headers
    